<?php

namespace UnicornFarmBundle\Controller\Rest;

use Swagger\Annotations as SWG;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Serializer\Encoder\JsonEncoder;
use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
use Symfony\Component\Serializer\Serializer;
use UnicornFarmBundle\Service\UnicornService;

class UnicornController extends Controller
{
    /**
     * @var UnicornService
     */
    private $unicornService;

    /**
     * @var serializer
     */
    private $serializer;

    /**
     * UnicornController constructor.
     * @param UnicornService $unicornService
     */
    public function __construct(UnicornService $unicornService)
    {
        $this->unicornService = $unicornService;
        $this->serializer = new Serializer([new ObjectNormalizer()], ['json' => new JsonEncoder()]);
    }

    /**
     * @SWG\Info(
     *      title="The Unicorns farm API",
     *      version="1.0.0",
     *      description="This is a unicorn farm.
     *                  No authorization is required to use this API.
     *                  This documentation was generated by swagger. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).",
     *      @SWG\Contact(
     *          email="support@example.com"
     *      )
     * )
     */

    /**
     * @SWG\Tag(
     *      name="unicorn",
     *      description="Everything about unicorns"
     * )
     * @SWG\Tag(
     *      name="post",
     *      description="Operations about posts"
     * )
     * @SWG\Tag(
     *      name="store",
     *      description="Operations in the store"
     * )
     * @SWG\Tag(
     *      name="user",
     *      description="Operations about users"
     * )
     */

    /**
     * @SWG\Get(
     *      path="/list",
     *      tags={"unicorn"},
     *      summary="Get a list of all unicorns",
     *      description="Get a list of all the unicorns in the farm",
     *      operationId="listAction",
     *      produces={"application/json"},
     *      @SWG\Parameter(
     *          name="order",
     *          in="query",
     *          description="Order criterion",
     *          type="string",
     *      ),
     *      @SWG\Parameter(
     *          name="page",
     *          in="query",
     *          description="Page number",
     *          type="integer",
     *      ),
     *      @SWG\Response(
     *          response=200,
     *          description="Success",
     *      )
     * )
     *
     * @Route(path="/list", methods={"GET"})
     * @param Request $request
     * @return Response
     */
    public function listAction(Request $request)
    {
        $order = $request->get('order');
        $page = $request->query->get('page', 1);

        $unicorns = $this->serializer->serialize(
            $this->unicornService->getAllUnicorns($page, $order),
            'json'
        );

        return new Response(
            $unicorns,
            Response::HTTP_OK,
            ['content-type' => 'application/json']);
    }

    /**
     * @Route(path="/test", methods={"GET"})
     * @param Request $request
     * @return Response
     */
    public function testAction(Request $request)
    {
        $unicorn = $this->serializer->serialize($this->unicornService->getUnicorn(1), 'json');
        return new Response($unicorn);
    }
}
